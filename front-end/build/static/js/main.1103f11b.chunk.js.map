{"version":3,"sources":["components/Home.js","components/RegionLinks.js","helpers/auth.js","components/NavBarHome.js","components/ParkCard.js","components/ParkIndex.js","components/UserProfile.js","components/Region.js","components/Favourite.js","components/Weather.js","components/Planner.js","components/ParkInfo.js","components/Activities.js","components/UserComment.js","components/ParkPage.js","components/ImageUploadField.js","components/NewRegister.js","components/NewLogin.js","App.js","index.js"],"names":["Home","infiniteLoop","autoFocus","showThumbs","showStatus","showIndicators","className","alt","src","to","pathname","Segment","fluid","inverted","color","Header","as","state","RegionLinks","useState","toggle","setToggle","history","useHistory","redirect","e","target","dataset","id","push","motion","div","initial","opacity","translateY","animate","transition","delay","style","position","left","top","background","fontWeight","textAlign","display","borderRadius","padding","zIndex","p","whileHover","scale","onClick","getTokenFromLocalStorage","window","localStorage","getItem","getPayload","token","splitToken","split","length","payloadString","JSON","parse","atob","userIsAuthenticated","payload","Math","round","Date","now","exp","NavBarHome","userData","setToogle","location","useLocation","useEffect","postion","vertical","Menu","icon","secondary","MenuItem","Item","Icon","name","size","Image","profilePicture","avatar","spaced","username","removeItem","toast","error","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","autoClose","newestOnTop","rtl","pauseOnFocusLoss","Flip","ParkCard","_id","title","images","postcode","longitude","latitude","open","setOpen","openComment","setOpenComment","park","setPark","getData","a","axios","get","data","console","log","x","Container","piled","raised","Grid","columns","divided","GridColumn","Reveal","animated","instant","RevealContent","visible","rounded","hidden","Content","Divider","whileTap","Modal","onClose","onOpen","trigger","mapboxApiAccessToken","process","height","width","mapStyle","zoom","Actions","Button","positive","isNaN","ratings","comments","map","c","rating","reduce","b","getAverage","Rating","defaultRating","averageRating","maxRating","disabled","scrolling","comment","Comment","Group","Avatar","owner","floated","Author","Metadata","createdAt","slice","Text","text","ParkIndex","parks","setParks","description","activities","activites","url","parseFloat","UserProfile","setUserData","userInfo","setUserInfo","favParks","setFavParks","joinData","setJoinDate","headers","Authorization","favouriteParks","info","handleDelete","event","preventDefault","delete","rotate","type","stiffness","damping","centered","Card","Meta","extra","closeIcon","content","celled","filter","duration","Description","region","Region","setRegion","Favourite","clicked","setClicked","favourite","setFavourite","favData","setFavData","handleClick","post","checkFavourite","removeFav","targetPark","class","Popup","onMouseLeave","onMouseEnter","newFavData","Weather","weather","setWeather","hasError","setHasError","Column","basic","moment","format","current","toUpperCase","temp","humidity","sunrise","toLocaleTimeString","sunset","add","daily","day","Planner","setPostcode","Form","onSubmit","Field","onChange","newPostcode","value","placeholder","ParkInfo","Inline","dogFriendly","column","href","cyclistFriendly","Activities","List","bulleted","verticalAlign","activ","UserComment","newComment","setNewComment","allComments","setAllComments","setComment","getSub","sub","deleteComment","deletingToast","handleSubmit","addingToast","document","querySelector","success","dividing","reply","TextArea","attributes","getNamedItem","labelPosition","ParkPage","useParams","lat","setLat","long","setLong","autoPlay","interval","transitionTime","swipeable","dynamicHeight","animationHandler","image","ImageUploadField","handleImageUrl","handleUpload","FormData","append","files","response","Input","NewRegister","email","password","passwordConfirmation","formData","setFormData","errors","setErrors","handleChange","newFormData","scaleY","exit","maxWidth","marginTop","required","NewLogin","setError","setItem","App","exact","path","component","excat","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1103f11b.chunk.js","sourcesContent":["import React from 'react'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { Link } from 'react-router-dom'\nimport { Header, Segment } from 'semantic-ui-react'\nimport Carousel from 'react-responsive-carousel/lib/js/components/Carousel/index'\n\nconst Home = () => {\n  return (\n    <Carousel\n      infiniteLoop={true}\n      autoFocus={true}\n      showThumbs={false}\n      showStatus={false}\n      showIndicators={false}\n      className=\"homeCarousel\">\n      <div>\n        <img\n          alt=\"imag\"\n          src=\"https://www.parkgrandlancastergate.co.uk/blog/wp-content/uploads/2018/01/hyde-poark-2.jpg\"\n        />\n        <Link to={{ pathname: '/parks' }}>\n          <Segment fluid inverted color=\"olive\">\n            <Header className=\"homePageFooter\" as=\"h1\">\n              All Parks\n            </Header>\n          </Segment>\n        </Link>\n      </div>\n\n      <div>\n        <img\n          alt=\"imag\"\n          src=\"https://cdn.shopify.com/s/files/1/0014/0633/7135/articles/primrose_hill_1200x.jpg?v=1532604924\"\n        />\n        <Link to={{ pathname: '/parks/region', state: 'North%20London' }}>\n          <Segment fluid inverted color=\"olive\">\n            <Header className=\"homePageFooter\" as=\"h1\">\n              North London\n            </Header>\n          </Segment>\n        </Link>\n      </div>\n\n      <div>\n        <img src=\"https://i0.wp.com/www.montcalmroyallondoncity.co.uk/blog/wp-content/uploads/2017/12/shutterstock_156450068.jpg?fit=1000%2C667&ssl=1\" />\n        <Link to={{ pathname: '/parks/region', state: 'East%20London' }}>\n          <Segment fluid inverted color=\"olive\">\n            <Header className=\"homePageFooter\" as=\"h1\">\n              East London\n            </Header>\n          </Segment>\n        </Link>\n      </div>\n\n      <div>\n        <img src=\"https://www.london-forever.com/wp-content/uploads/2020/09/hyde-park.jpg\" />\n        <Link to={{ pathname: '/parks/region', state: 'Central%20London' }}>\n          <Segment fluid inverted color=\"olive\">\n            <Header className=\"homePageFooter\" as=\"h1\">\n              Central London\n            </Header>\n          </Segment>\n        </Link>\n      </div>\n\n      <div>\n        <img src=\"https://img.locationscout.net/images/2019-05/richmond-park-london-uk-united-kingdom_l.jpeg\" />\n        <Link to={{ pathname: '/parks/region', state: 'South%20London' }}>\n          <Segment fluid inverted color=\"olive\">\n            <Header className=\"homePageFooter\" as=\"h1\">\n              South London\n            </Header>\n          </Segment>\n        </Link>\n      </div>\n\n      <div>\n        <img src=\"https://offloadmedia.feverup.com/secretldn.com/wp-content/uploads/2018/02/18150424/22637281_1082893518480502_4132483769749733376_n-2.jpg\" />\n        <Link to={{ pathname: '/parks/region', state: 'West%20London' }}>\n          <Segment fluid inverted color=\"olive\">\n            <Header className=\"homePageFooter\" as=\"h1\">\n              West London\n            </Header>\n          </Segment>\n        </Link>\n      </div>\n    </Carousel>\n  )\n}\nexport default Home\n","import React, { useState } from 'react'\nimport { motion } from 'framer-motion'\nimport { useHistory } from 'react-router-dom'\n\nconst RegionLinks = () => {\n  const [toggle, setToggle] = useState(true)\n\n  const history = useHistory()\n  const redirect = e => {\n    setToggle(!toggle)\n    e.target.dataset.id === 'All'\n      ? history.push('/parks')\n      : history.push({ pathname: '/parks/region', state: e.target.dataset.id })\n  }\n\n  const displayToggle = () => (toggle ? 'visable' : 'none')\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, translateY: '0' }}\n      animate={{ opacity: 0.7, translateY: '10px' }}\n      transition={{ delay: 0.2 }}\n      style={{\n        position: 'absolute',\n        left: '5.5em',\n        top: '4em',\n        background: 'green',\n        color: 'white',\n        fontWeight: 'bold',\n        textAlign: 'center',\n        display: displayToggle(),\n        borderRadius: '5px',\n        padding: '20px',\n        zIndex: 1,\n      }}>\n      <motion.p\n        whileHover={{ scale: 1.2 }}\n        data-id=\"North%20London\"\n        onClick={redirect}>\n        North London\n      </motion.p>\n      <motion.p\n        whileHover={{ scale: 1.2 }}\n        data-id=\"Central%20London\"\n        onClick={redirect}>\n        Central London\n      </motion.p>\n      <motion.p\n        whileHover={{ scale: 1.2 }}\n        data-id=\"South%20London\"\n        onClick={redirect}>\n        South London\n      </motion.p>\n      <motion.p\n        whileHover={{ scale: 1.2 }}\n        data-id=\"East%20London\"\n        onClick={redirect}>\n        East London\n      </motion.p>\n      <motion.p\n        whileHover={{ scale: 1.2 }}\n        data-id=\"West%20London\"\n        onClick={redirect}>\n        West London\n      </motion.p>\n      <motion.p whileHover={{ scale: 1.2 }} data-id=\"All\" onClick={redirect}>\n        All Parks\n      </motion.p>\n    </motion.div>\n  )\n}\n\nexport default RegionLinks\n","export const getTokenFromLocalStorage = () => {\n  return window.localStorage.getItem('token') // get token from local storage\n}\n\nexport const getPayload = () => {\n  const token = getTokenFromLocalStorage() // store the response of get token function in variable\n  if (!token) return // if no token exists just return here\n  const splitToken = token.split('.') // split the token into an array of 3 strings\n  if (splitToken.length < 3) return // if the array of strings has a length less than 3 return here\n  const payloadString = splitToken[1] // get just the payload string from the array\n  return JSON.parse(atob(payloadString)) // decode the payload string, using json.parse to convert from JSON to JS object\n}\n\nexport const userIsAuthenticated = () => {\n  const payload = getPayload() // get payload part of the token by calling get payload function\n  if (!payload) return false // if there is no payload returned function returns false\n  const now = Math.round(Date.now() / 1000) // get the current time in milliseconds and convert to seconds as this is the format the expiry time on the token is in\n  return now < payload.exp // check if the current time is less than the expiry time, returns a boolean\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Menu, Segment, Image, Icon, MenuItem, Header } from 'semantic-ui-react'\nimport RegionLinks from './RegionLinks'\nimport { userIsAuthenticated } from '../helpers/auth'\nimport { ToastContainer, toast, Flip } from 'react-toastify'\n\nconst NavBarHome = ({ userData }) => {\n  const history = useHistory()\n  const [toggle, setToogle] = useState(false)\n  const location = useLocation()\n\n  const showMeToast = name => {\n    toast.error(`See you soon ${name}!`, {\n      position: 'top-left',\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    })\n  }\n\n  useEffect(() => {}, [location.pathname])\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('token') // remove token from local storage\n    showMeToast(userData.username)\n    history.push('/')\n  }\n\n  return (\n    <>\n      <Segment style={{ postion: 'relative' }} color=\"green\" inverted vertical>\n        <Menu icon secondary color=\"green\" inverted>\n          <MenuItem position=\"left\">\n            <Menu.Item onClick={() => history.push('/')}>\n              <Icon name=\"home\" size=\"big\" />\n            </Menu.Item>\n            <Menu.Item\n              name=\"Parks by Region\"\n              onClick={() => setToogle(!toggle)}\n            />\n          </MenuItem>\n          <Menu.Item>\n            <Header as=\"h1\" inverted className=\"navbarTitle\">\n              Best London Parks 🌳\n            </Header>\n          </Menu.Item>\n          {userIsAuthenticated() ? (\n            <MenuItem position=\"right\">\n              <Menu.Item onClick={() => history.push('/profile')}>\n                <Image\n                  src={userData.profilePicture}\n                  size=\"mini\"\n                  avatar\n                  spaced=\"right\"\n                />\n                <p>{userData.username}</p>\n              </Menu.Item>\n              <Menu.Item name=\"Logout\" onClick={handleLogout} />\n            </MenuItem>\n          ) : (\n            <MenuItem position=\"right\">\n              <Menu.Item onClick={() => history.push('/login')}>\n                Login\n              </Menu.Item>\n              <Menu.Item onClick={() => history.push('/register')}>\n                Register\n              </Menu.Item>\n            </MenuItem>\n          )}\n        </Menu>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={2000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss={false}\n          draggable\n          pauseOnHover\n          transition={Flip}\n        />\n        <>{toggle && <RegionLinks />}</>\n      </Segment>\n    </>\n  )\n}\n\nexport default NavBarHome\n","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  Container,\n  Divider,\n  Grid,\n  GridColumn,\n  Icon,\n  Header,\n  Image,\n  Reveal,\n  RevealContent,\n  Segment,\n  Rating,\n  Modal,\n  Button,\n  Comment,\n} from 'semantic-ui-react'\nimport { motion } from 'framer-motion'\nimport axios from 'axios'\nimport ReactMapGl from 'react-map-gl'\n\nconst ParkCard = ({ _id, title, images, postcode, longitude, latitude }) => {\n  const [open, setOpen] = useState(false)\n  const [openComment, setOpenComment] = useState(false)\n  const history = useHistory()\n  const location = useLocation()\n  const [park, setPark] = useState(null)\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get(`/api/london-parks-api/${_id}`)\n      setPark(data)\n    }\n    getData()\n  }, [_id])\n\n  const getAverage = () => {\n    const ratings = park.comments.map(c => c.rating)\n    const aveRating = ratings.reduce((a, b) => a + b, 0)\n    return aveRating / ratings.length\n  }\n\n  console.log()\n\n  useEffect(() => {}, [location.pathname, _id])\n\n  return (\n    <>\n      {park && (\n        <motion.div\n          whileHover={{ scale: 1.1 }}\n          initial={{ x: '-100vw' }}\n          animate={{ x: 0 }}>\n          <Container className=\"parkCardContainer\" textAlign=\"center\" key={_id}>\n            <Segment piled raised>\n              <Grid columns={2} divided>\n                <GridColumn onClick={() => history.push(`/parks/${_id}`)}>\n                  <Reveal animated=\"fade\" instant>\n                    <RevealContent visible>\n                      <Image\n                        src={images[0]}\n                        alt={title}\n                        rounded\n                        fluid\n                        size=\"big\"></Image>\n                    </RevealContent>\n                    <RevealContent hidden>\n                      <Image\n                        src={images[1]}\n                        alt={title}\n                        rounded\n                        fluid\n                        size=\"big\"></Image>\n                    </RevealContent>\n                  </Reveal>\n                </GridColumn>\n\n                <GridColumn>\n                  <motion.div whileHover={{ scale: 1.5 }}>\n                    <Header\n                      as=\"h3\"\n                      icon\n                      textAlign=\"center\"\n                      inverted\n                      color=\"red\">\n                      <Icon name=\"hand point down outline\" />\n                      <Header.Content>{title}</Header.Content>\n                    </Header>\n                  </motion.div>\n\n                  <Divider hidden />\n\n                  <motion.div\n                    whileHover={{ scale: 1.5 }}\n                    whileTap={{ scale: 0.9 }}>\n                    <Modal\n                      onClose={() => setOpen(false)}\n                      onOpen={() => setOpen(true)}\n                      open={open}\n                      trigger={\n                        <Header\n                          as=\"h3\"\n                          icon\n                          textAlign=\"center\"\n                          inverted\n                          color=\"blue\">\n                          <Icon name=\"home\" />\n                          <Header.Content>{postcode}</Header.Content>\n                        </Header>\n                      }>\n                      <Header as=\"h1\" textAlign=\"center\">\n                        Here is {title}!\n                      </Header>\n                      <Modal.Content>\n                        <Segment raised>\n                          <ReactMapGl\n                            mapboxApiAccessToken={\n                              process.env.REACT_APP_MAPBOX_TOKEN\n                            }\n                            height=\"30em\"\n                            width=\"100%\"\n                            mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n                            zoom={13}\n                            latitude={latitude}\n                            longitude={longitude}\n                          />\n                        </Segment>\n                      </Modal.Content>\n                      <Modal.Actions>\n                        <Button onClick={() => setOpen(false)} positive>\n                          Okay!\n                        </Button>\n                      </Modal.Actions>\n                    </Modal>\n                  </motion.div>\n                  <Divider hidden />\n                  {isNaN(getAverage()) ? (\n                    <motion.div\n                      whileHover={{ scale: 1.5 }}\n                      whileTap={{ scale: 0.9 }}>\n                      <Header as=\"h3\" icon textAlign=\"center\" color=\"yellow\">\n                        <Icon name=\"star outline\" />\n                        <Header.Content>\n                          Be the first to rate this park!\n                        </Header.Content>\n                      </Header>\n                    </motion.div>\n                  ) : (\n                    <motion.div\n                      whileHover={{ scale: 1.5 }}\n                      whileTap={{ scale: 0.9 }}>\n                      <Modal\n                        onClose={() => setOpenComment(false)}\n                        onOpen={() => setOpenComment(true)}\n                        open={openComment}\n                        trigger={\n                          <Header\n                            as=\"h3\"\n                            icon\n                            textAlign=\"center\"\n                            color=\"yellow\">\n                            <Icon name=\"star outline\" />\n                            <Header.Content>Average Rating</Header.Content>\n                            <Rating\n                              defaultRating={park.averageRating}\n                              icon=\"star\"\n                              maxRating={5}\n                              disabled\n                            />\n                          </Header>\n                        }>\n                        <Header as=\"h1\" textAlign=\"center\">\n                          Latest comments!\n                        </Header>\n                        <Modal.Content scrolling>\n                          <Segment raised>\n                            {park.comments.length &&\n                              park.comments.map(comment => {\n                                return (\n                                  <>\n                                    <Container>\n                                      <Comment.Group>\n                                        <Comment>\n                                          <Comment.Content>\n                                            <Comment.Avatar\n                                              as=\"a\"\n                                              src={comment.owner.profilePicture}\n                                              floated=\"right\"\n                                            />\n                                            <Comment.Author as=\"a\">\n                                              {comment.owner.username}\n                                            </Comment.Author>\n                                            <Comment.Metadata>\n                                              <div>\n                                                {comment.createdAt.slice(0, 10)}\n                                              </div>\n                                            </Comment.Metadata>\n                                            <Comment.Text>\n                                              {comment.text}\n                                            </Comment.Text>\n                                            <Rating\n                                              defaultRating={comment.rating}\n                                              icon=\"star\"\n                                              maxRating={5}\n                                              disabled\n                                            />\n                                            <Divider />\n                                          </Comment.Content>\n                                        </Comment>\n                                      </Comment.Group>\n                                    </Container>\n                                  </>\n                                )\n                              })}\n                          </Segment>\n                        </Modal.Content>\n                        <Modal.Actions>\n                          <Button\n                            onClick={() => setOpenComment(false)}\n                            positive>\n                            Okay!\n                          </Button>\n                        </Modal.Actions>\n                      </Modal>\n                    </motion.div>\n                  )}\n                </GridColumn>\n              </Grid>\n            </Segment>\n            <Divider hidden />\n          </Container>\n        </motion.div>\n      )}\n    </>\n  )\n}\nexport default ParkCard\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport ParkCard from './ParkCard'\nimport { Segment, Header } from 'semantic-ui-react'\n\nconst ParkIndex = () => {\n  const [parks, setParks] = useState([])\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get('/api/london-parks-api')\n      setParks(data)\n    }\n    getData()\n  }, [])\n  console.log(parks)\n  return (\n    <>\n      <Segment raised className=\"regionTitle\">\n        <Header as={'h1'} textAlign={'center'} id=\"parkHeader\" color=\"green\">\n          All Parks 🍂\n        </Header>\n      </Segment>\n      {parks.map(park => {\n        return (\n          <ParkCard\n            _id={park._id}\n            title={park.title}\n            images={park.images}\n            description={park.description}\n            postcode={park.postcode}\n            activities={park.activites}\n            url={park.url}\n            latitude={parseFloat(park.latitude)}\n            longitude={parseFloat(park.longitude)}\n          />\n        )\n      })}\n    </>\n  )\n}\nexport default ParkIndex\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { getTokenFromLocalStorage } from '../helpers/auth'\nimport {\n  Grid,\n  Card,\n  GridColumn,\n  Image,\n  Button,\n  Modal,\n  Header,\n  Icon,\n  Segment,\n} from 'semantic-ui-react'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { motion } from 'framer-motion'\n\nconst UserProfile = ({ setUserData }) => {\n  const [userInfo, setUserInfo] = useState([])\n  const [favParks, setFavParks] = useState([])\n  const [joinData, setJoinDate] = useState([])\n  const [open, setOpen] = useState(false)\n  const history = useHistory()\n\n  const showMeToast = name => {\n    toast.info(`Welcome ${name}!`, {\n      position: 'top-right',\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    })\n  }\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get('/api/profile', {\n        headers: { Authorization: `Bearer ${getTokenFromLocalStorage()}` },\n      })\n      setUserInfo(data)\n      setFavParks(data.favouriteParks)\n      setJoinDate(data.createdAt)\n      showMeToast(data.username)\n    }\n    getData()\n  }, [])\n\n  setUserData(userInfo)\n\n  const handleDelete = async event => {\n    event.preventDefault()\n    try {\n      await axios.delete(`/api/profile/${userInfo._id}`, {\n        headers: { Authorization: `Bearer ${getTokenFromLocalStorage()}` }, // need to send the token on the headers object\n      })\n      window.localStorage.removeItem('token')\n      history.push('/parks')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <>\n      <motion.div\n        initial={{ scale: 0 }}\n        animate={{ rotate: 360, scale: 1 }}\n        transition={{\n          type: 'spring',\n          stiffness: 160,\n          damping: 20,\n        }}>\n        <Grid centered>\n          <GridColumn>\n            <Card fluid>\n              <Image src={userInfo.profilePicture} centered size=\"big\" fluid />\n              <Card.Content>\n                <Card.Header as=\"h1\">{userInfo.username}</Card.Header>\n                <Card.Meta>\n                  <span className=\"date\">Joined: {joinData.slice(0, 10)}</span>\n                </Card.Meta>\n              </Card.Content>\n              <Card.Content extra>\n                <Modal\n                  closeIcon\n                  open={open}\n                  trigger={\n                    <Button color=\"red\" floated=\"right\">\n                      Delete my profile\n                    </Button>\n                  }\n                  onClose={() => setOpen(false)}\n                  onOpen={() => setOpen(true)}>\n                  <Header icon=\"archive\" content=\"Deleting your profile\" />\n                  <Modal.Content>\n                    <p>\n                      Are you sure you want to delete your profile?\n                      <br />\n                      All data will be lost\n                    </p>\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button color=\"red\" onClick={() => setOpen(false)}>\n                      <Icon name=\"remove\" /> No\n                    </Button>\n                    <Button color=\"green\" onClick={handleDelete}>\n                      <Icon name=\"checkmark\" /> Yes\n                    </Button>\n                  </Modal.Actions>\n                </Modal>\n              </Card.Content>\n            </Card>\n          </GridColumn>\n        </Grid>\n      </motion.div>\n\n      <Segment>\n        <Header as=\"h1\" textAlign=\"center\">\n          Your favourite parks in London!\n        </Header>\n      </Segment>\n      <Grid centered celled=\"internally\">\n        {favParks.map(park => {\n          return (\n            <motion.div\n              whileHover={{\n                position: 'relative',\n                zIndex: 1,\n                scale: [1, 1.4, 1.2],\n                rotate: [0, 10, -10, 0],\n                filter: [\n                  'hue-rotate(0) contrast(100%)',\n                  'hue-rotate(360deg) contrast(200%)',\n                  'hue-rotate(45deg) contrast(300%)',\n                  'hue-rotate(0) contrast(100%)',\n                ],\n                transition: {\n                  duration: 0.2,\n                },\n              }}>\n              <Segment vertical textAlign=\"left\">\n                <Card\n                  onClick={() => history.push(`/parks/${park._id}`)}\n                  key={park._id}>\n                  <Image src={park.images[0]} />\n                  <Card.Content>\n                    <Card.Header>{park.title}</Card.Header>\n                    <Card.Meta>\n                      <span className=\"date\">{park.postcode}</span>\n                    </Card.Meta>\n                    <Card.Description>{park.region}</Card.Description>\n                  </Card.Content>\n                </Card>\n              </Segment>\n            </motion.div>\n          )\n        })}\n      </Grid>\n    </>\n  )\n}\n\nexport default UserProfile\n","import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { Header, Segment } from 'semantic-ui-react'\nimport ParkCard from './ParkCard.js'\nimport axios from 'axios'\n\nconst Region = () => {\n  const [region, setRegion] = useState(null)\n  const location = useLocation()\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get(\n        `/api/london-parks-api/region/${location.state}`\n      )\n      console.log(data)\n      setRegion(data)\n    }\n    getData()\n  }, [location.state])\n\n  return (\n    <>\n      <Segment raised className=\"regionTitle\">\n        <Header as={'h1'} textAlign={'center'} id=\"parkHeader\" color=\"green\">\n          {region && region[0].region} 🍁\n        </Header>\n      </Segment>\n      {region &&\n        region.map(region => {\n          return (\n            <ParkCard\n              _id={region._id}\n              title={region.title}\n              images={region.images}\n              description={region.description}\n              postcode={region.postcode}\n              activities={region.activites}\n              url={region.url}\n              latitude={parseFloat(region.latitude)}\n              longitude={parseFloat(region.longitude)}\n            />\n          )\n        })}\n    </>\n  )\n}\n\nexport default Region\n","import React, { useEffect, useState } from 'react'\nimport { Header, Segment, Icon, Popup } from 'semantic-ui-react'\nimport { getTokenFromLocalStorage } from '../helpers/auth.js'\nimport axios from 'axios'\n\n// requirements: ui - toggle making a park a 'favourite', display the park as a favourite if previously marked by the user as such\n// requirements: functionality - check if the park is already a user favourite on db; send http requests to add or remove the park from user's favourites in db\n\nconst Favourite = ({ park, id }) => {\n  const [toggle, setToggle] = useState(null)\n  const [clicked, setClicked] = useState(false)\n  const [favourite, setFavourite] = useState(null)\n  const [favData, setFavData] = useState(null)\n  const [userData, setUserData] = useState(null)\n\n  //event handlers to toggle between an outline and full heart favourite icon\n  // also set state to be sent when the click event (handleclick) is triggered\n  const handleMouseEnter = () => {\n    const newFavData = { ...favData, targetPark: id }\n    setFavData(newFavData)\n    setToggle(true)\n  }\n  const handleMouseExit = () => {\n    console.log(clicked)\n    clicked ? setToggle(true) : setToggle(false)\n  }\n\n  //make the request to add or remove this park from the user's favourite parks key in the db\n  const handleClick = async () => {\n    try {\n      setToggle(true)\n      setClicked(!clicked)\n      if (!clicked) {\n        await axios.post('/api/favourite-parks', favData, {\n          headers: { Authorization: `Bearer ${getTokenFromLocalStorage()}` },\n        })\n      } else {\n        await axios.delete('/api/favourite-parks', {\n          data: { favData },\n          headers: { Authorization: `Bearer ${getTokenFromLocalStorage()}` },\n        })\n      }\n    } catch {\n      console.log('error')\n    }\n  }\n\n  //get the userData of the current user, will be used to check if this park is in their\n  // favourite parks key in the useEffect directly below\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get('/api/profile', {\n        headers: { Authorization: `Bearer ${getTokenFromLocalStorage()}` },\n      })\n      setUserData(data)\n    }\n    getData()\n  }, [])\n\n  // function to check if this park is already in the users FavouriteParks key, check to see if the\n  // userData request has returned before running main function.\n  useEffect(() => {\n    const checkFavourite = () => {\n      if (userData === null) {\n        return console.log('use effect running on initial render')\n      } else {\n        const checkPark = userData.favouriteParks.filter(\n          x => x._id === park._id\n        )\n        checkPark.length ? setFavourite(true) : console.log('not a fav park')\n      }\n    }\n    checkFavourite()\n  }, [userData, park._id])\n\n  //onclick handler to remove favourite set by useEffect directly above && send\n  // a delete request to the db for the current user\n\n  const removeFav = async () => {\n    setFavourite(false)\n    try {\n      await axios.delete('/api/favourite-parks', {\n        data: { targetPark: id },\n        headers: { Authorization: `Bearer ${getTokenFromLocalStorage()}` },\n      })\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <div color=\"olive\">\n      {favourite ? (\n        <Segment raised class=\"parkPageColumns\" color=\"olive\">\n          <Header as=\"h3\" icon textAlign=\"center\" inverted color=\"red\">\n            <Popup trigger={<Icon onClick={removeFav} name=\"heart\" />}>\n              <Popup.Content>\n                <p>\n                  Click to <strong>REMOVE</strong> this park from your\n                  favourites\n                </p>\n              </Popup.Content>\n            </Popup>\n            <Header.Content>Favourite</Header.Content>\n          </Header>\n        </Segment>\n      ) : (\n        <Segment raised class=\"parkPageColumns\" color=\"olive\">\n          <Header as=\"h3\" icon textAlign=\"center\" inverted color=\"red\">\n            <Popup\n              trigger={\n                !toggle ? (\n                  <Icon\n                    onMouseEnter={handleMouseEnter}\n                    onClick={handleClick}\n                    name=\"heart outline\"\n                  />\n                ) : (\n                  <Icon\n                    onClick={handleClick}\n                    onMouseLeave={handleMouseExit}\n                    name=\"heart\"\n                  />\n                )\n              }>\n              <Popup.Content>\n                {clicked ? (\n                  <p>\n                    Click to <strong>REMOVE</strong> this park from your\n                    favourites\n                  </p>\n                ) : (\n                  <p>\n                    Click to <strong>ADD</strong> this to your favourites\n                  </p>\n                )}\n              </Popup.Content>\n            </Popup>\n            <Header.Content>Favourite</Header.Content>\n          </Header>\n        </Segment>\n      )}\n    </div>\n  )\n}\n\nexport default Favourite\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Segment, Grid, Divider } from 'semantic-ui-react'\nimport moment from 'moment'\n\nconst Weather = ({ park }) => {\n  const [weather, setWeather] = useState(null)\n  const [hasError, setHasError] = useState(false)\n\n  useEffect(() => {\n    if (!park) return\n    const getData = async () => {\n      try {\n        const { data } = await axios.get(\n          `https://api.openweathermap.org/data/2.5/onecall?lat=${park.latitude}&lon=${park.longitude}&units=metric&exclude=minutely,hourly&appid=${process.env.REACT_APP_APIkey}`\n        )\n        setWeather(data)\n      } catch (err) {\n        setHasError(true)\n      }\n    }\n    getData()\n  }, [])\n\n  return (\n    <>\n      <Segment id=\"weather-main\">\n        <Grid columns={3}>\n          <Grid.Column>\n            <Segment id=\"header-main\" basic>\n              Weather Forcast\n            </Segment>\n          </Grid.Column>\n        </Grid>\n        {weather ? (\n          <Segment id=\"blue-segment\">\n            <Grid columns={3}>\n              <Grid.Column id=\"weather-column\">\n                <p id=\"day\">{moment().format('dddd')}</p>\n                <p id=\"day\">{moment().format('LL')}</p>\n                <Segment id=\"description\" basic>\n                  {weather.current.weather[0].description.toUpperCase()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column>\n                <p id=\"day\">\n                  Temperature: {Math.round(weather.current.temp)} &deg;C\n                </p>\n                <p id=\"day\">Humidity: {weather.current.humidity} %</p>\n              </Grid.Column>\n              <Grid.Column>\n                <p id=\"day\">\n                  Sunrise:{' '}\n                  {new Date(weather.current.sunrise * 1000).toLocaleTimeString(\n                    'en-IN'\n                  )}\n                </p>\n                <p id=\"day\">\n                  Sunset:{' '}\n                  {new Date(weather.current.sunset * 1000).toLocaleTimeString(\n                    'en-IN'\n                  )}\n                </p>\n              </Grid.Column>\n            </Grid>\n            <Divider />\n            <Grid columns={3}>\n              <Grid.Column id=\"weather-column\">\n                <p id=\"day\">{moment().add(1, 'days').format('dddd')}</p>\n                <p id=\"day\">{moment().add(1, 'days').format('LL')}</p>\n                <Segment id=\"description\" basic>\n                  {weather.daily[1].weather[0].description.toUpperCase()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column>\n                <p id=\"day\">\n                  Temperature: {Math.round(weather.daily[1].temp.day)} &deg;C\n                </p>\n                <p id=\"day\">Humidity: {weather.daily[1].humidity} %</p>\n              </Grid.Column>\n              <Grid.Column>\n                <p id=\"day\">\n                  Sunrise:{' '}\n                  {new Date(weather.daily[1].sunrise * 1000).toLocaleTimeString(\n                    'en-IN'\n                  )}\n                </p>\n                <p id=\"day\">\n                  Sunset:{' '}\n                  {new Date(weather.daily[1].sunset * 1000).toLocaleTimeString(\n                    'en-IN'\n                  )}\n                </p>\n              </Grid.Column>\n            </Grid>\n            <Divider />\n            <Grid columns={3}>\n              <Grid.Column id=\"weather-column\">\n                <p id=\"day\">{moment().add(2, 'days').format('dddd')}</p>\n                <p id=\"day\">{moment().add(2, 'days').format('LL')}</p>\n                <Segment id=\"description\" basic>\n                  {weather.daily[2].weather[0].description.toUpperCase()}\n                </Segment>\n              </Grid.Column>\n              <Grid.Column>\n                <p id=\"day\">\n                  Temperature: {Math.round(weather.daily[2].temp.day)} &deg;C\n                </p>\n                <p id=\"day\">Humidity: {weather.daily[2].humidity} %</p>\n              </Grid.Column>\n              <Grid.Column>\n                <p id=\"day\">\n                  Sunrise:{' '}\n                  {new Date(weather.daily[2].sunrise * 1000).toLocaleTimeString(\n                    'en-IN'\n                  )}\n                </p>\n                <p id=\"day\">\n                  Sunset:{' '}\n                  {new Date(weather.daily[2].sunset * 1000).toLocaleTimeString(\n                    'en-IN'\n                  )}\n                </p>\n              </Grid.Column>\n            </Grid>\n          </Segment>\n        ) : (\n          <h2>\n            {hasError ? 'Something has gone wrong!' : 'Weather is loading'}\n          </h2>\n        )}\n      </Segment>\n    </>\n  )\n}\nexport default Weather\n","import React, { useState } from 'react'\nimport { Button, Form, Header, Segment } from 'semantic-ui-react'\n\nconst Planner = ({ park }) => {\n  const [postcode, setPostcode] = useState(null)\n\n  const handleChange = e => {\n    const newPostcode = e.target.value\n    setPostcode(newPostcode)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    window.open(\n      `https://tfl.gov.uk/plan-a-journey/results?InputFrom=${postcode}&FromId=&InputTo=${park.postcode}&ToId=`,\n      '_blank'\n    )\n  }\n\n  return (\n    <Segment raised textAlign=\"center\" color=\"olive\">\n      <Form style={{ padding: '15px' }} onSubmit={handleSubmit}>\n        <Header color=\"olive\">How can I get there?</Header>\n        <Form.Field>\n          <p style={{ color: '#4183c4' }}>Enter your postcode</p>\n          <input\n            id=\"planner-input\"\n            fluid=\"false\"\n            size=\"small\"\n            onChange={handleChange}\n            placeholder=\"SW19 1AA...\"\n          />\n        </Form.Field>\n        <Button color=\"olive\" type=\"submit\">\n          Take me there!\n        </Button>\n      </Form>\n    </Segment>\n  )\n}\n\nexport default Planner\n","import React from 'react'\nimport {\n  Segment,\n  Grid,\n  Header,\n  Container,\n  Divider,\n  Image,\n} from 'semantic-ui-react'\n\nconst ParkInfo = ({ park }) => {\n  const cyclingFriendly = () => {\n    if (park.cyclistFriendly === 'yes') {\n      return (\n        <Image\n          src={\n            'https://media.istockphoto.com/illustrations/green-bicycle-traffic-sign-vector-icon-illustration-id1162027328?k=20&m=1162027328&s=170667a&w=0&h=FRM8rA0O-oCFfVUND-eg1m8ICpUealQ8Rw0a8Sk98OU='\n          }\n          size=\"tiny\"\n          left\n          id=\"greenBicycle\"\n        />\n      )\n    }\n    if (park.cyclistFriendly === 'no') {\n      return (\n        <Image\n          src={\n            'https://previews.123rf.com/images/almightyalex/almightyalex1810/almightyalex181001450/111051484-stop-or-ban-sign-with-cyclist-icon-isolated-on-white-background-cycling-is-prohibited-vector-illustr.jpg'\n          }\n          size=\"tiny\"\n          left\n          id=\"no-cycle\"\n        />\n      )\n    } else {\n      return (\n        <>\n          <Segment.Inline>\n            <Grid column={2}>\n              <Image\n                src={\n                  'https://media.istockphoto.com/illustrations/green-bicycle-traffic-sign-vector-icon-illustration-id1162027328?k=20&m=1162027328&s=170667a&w=0&h=FRM8rA0O-oCFfVUND-eg1m8ICpUealQ8Rw0a8Sk98OU='\n                }\n                size=\"tiny\"\n                left\n                id=\"greenBicycle\"\n              />\n              <Header as=\"h6\" textAlign=\"left\" id=\"header-park-info\">\n                <a\n                  href={\n                    'https://www.royalparks.org.uk/managing-the-parks/cycling-in-the-royal-parks'\n                  }>\n                  with some restrictions\n                </a>\n              </Header>\n            </Grid>\n          </Segment.Inline>\n        </>\n      )\n    }\n  }\n\n  const dogsFriendly = () => {\n    if (park.dogFriendly === 'yes') {\n      return (\n        <Image\n          src={'https://static.thenounproject.com/png/14830-200.png'}\n          size=\"tiny\"\n          left\n          id=\"dog-yes\"\n        />\n      )\n    }\n    if (park.dogFriendly === 'no') {\n      return (\n        <Image\n          src={\n            'https://createsigns.co.nz/wp-content/uploads/2017/05/No-Pets-Service-Animals-Allowed-Sign-No-Dog-Icon-1.png'\n          }\n          size=\"small\"\n          left\n          id=\"no-dog\"\n        />\n      )\n    } else {\n      return (\n        <>\n          <Segment.Inline>\n            <Grid column={2}>\n              <Image\n                src={\n                  'https://etc.usf.edu/clipart/70300/70382/70382_262_rg-110_s_md.gif'\n                }\n                size=\"tiny\"\n                left\n              />\n              <Header as=\"h6\" textAlign=\"left\" id=\"header-park-info\">\n                <a\n                  href={\n                    'https://www.royalparks.org.uk/managing-the-parks/park-regulations-legislation-and-policies/dogs-in-the-royal-parks'\n                  }>\n                  with some restrictions\n                </a>\n              </Header>\n            </Grid>\n          </Segment.Inline>\n        </>\n      )\n    }\n  }\n\n  return (\n    <>\n      <Segment raised color=\"olive\">\n        <Grid columns={3}>\n          <Grid.Column>\n            <Container id=\"postCodeContainer\">\n              <Header as=\"h4\" textAlign=\"left\" color=\"olive\">\n                <Segment.Inline>\n                  <Container>\n                    <p>Postcode</p>\n                  </Container>\n                  <Container>\n                    <p>{park.postcode}</p>\n                  </Container>\n                </Segment.Inline>\n              </Header>\n            </Container>\n          </Grid.Column>\n\n          <Grid.Column>\n            <Segment basic>{dogsFriendly()}</Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment basic>{cyclingFriendly()}</Segment>\n          </Grid.Column>\n        </Grid>\n\n        <Divider />\n\n        <Segment.Inline>\n          <Grid column={2}>\n            <Image\n              src={\n                'https://thumbs.dreamstime.com/b/web-vector-icon-arrow-website-icon-cursor-move-web-vector-icon-arrow-website-icon-cursor-move-122726028.jpg'\n              }\n              size=\"tiny\"\n            />\n            <p textAlign=\"left\" as=\"h6\">\n              <a href={park.url}>{park.title}</a>\n            </p>\n          </Grid>\n        </Segment.Inline>\n      </Segment>\n    </>\n  )\n}\nexport default ParkInfo\n","import React from 'react'\nimport { Header, Segment, Image, List } from 'semantic-ui-react'\n\nconst Activities = ({ park }) => {\n  return (\n    <Segment raised color=\"olive\" id=\"activities-segment\" fluid>\n      <div>\n        <Header as=\"h4\" textAlign=\"left\" color=\"olive\">\n          <Image\n            src={\n              'https://img.freepik.com/free-vector/landscape-park-scene-icon_24877-56515.jpg?size=338&ext=jpg'\n            }\n            alt={park.title}\n            size=\"massive\"\n            left\n          />\n          Activities\n        </Header>\n        <List bulleted animated verticalAlign=\"middle\">\n          {park.activites.map(activ => {\n            return <List.Item>{activ}</List.Item>\n          })}\n        </List>\n      </div>\n    </Segment>\n  )\n}\nexport default Activities\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {\n  getTokenFromLocalStorage,\n  userIsAuthenticated,\n  getPayload,\n} from '../helpers/auth'\nimport {\n  Segment,\n  Rating,\n  Comment,\n  Header,\n  Form,\n  Button,\n  Modal,\n  Icon,\n  Divider,\n} from 'semantic-ui-react'\nimport { toast, ToastContainer, Flip } from 'react-toastify'\n\nexport const UserComment = ({ id }) => {\n  const [newComment, setNewComment] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [toggle, setToggle] = useState(false)\n  const [allComments, setAllComments] = useState(true)\n  const [comment, setComment] = useState({\n    text: '',\n    rating: 0,\n    owner: '',\n  })\n\n  // get the payload for the current user, use this to conditionally render a delete button next to comments\n  // depending on whether the payload matches that of the owner of the comment\n  const getSub = () => {\n    const payload = getPayload()\n    if (!payload) return\n    return payload.sub\n  }\n\n  // getTokenFromLocalStorage()\n\n  // get the value of the radio button representing the stars and pass it to the 'comment' state\n  const handleStars = e => {\n    const rating = e.target.attributes.getNamedItem('aria-posinset').value\n    const newComment = { ...comment, rating }\n    setComment(newComment)\n  }\n\n  const deleteComment = async e => {\n    console.log(e.target.value)\n    await axios.delete(\n      `/api/london-parks-api/${id}/comments/${e.target.value}`,\n      {\n        headers: { Authorization: `Bearer ${getTokenFromLocalStorage()}` },\n      }\n    )\n    deletingToast()\n    setOpen(false)\n    setNewComment(!newComment)\n    // setToggle(!toggle)\n  }\n\n  const handleChange = event => {\n    const newComment = {\n      ...comment,\n      [event.target.name]: event.target.value,\n      owner: getSub(),\n    }\n    setComment(newComment)\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    if (!comment.rating) {\n      setToggle(!toggle)\n      return\n    } else {\n      try {\n        await axios.post(`/api/london-parks-api/${id}/comments`, comment, {\n          headers: { Authorization: `Bearer ${getTokenFromLocalStorage()}` }, // need to send the token on the headers object\n        })\n        setNewComment(!newComment)\n        addingToast()\n        setToggle(false)\n        console.log(getSub())\n        console.log(allComments[0].owner._id)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n\n    document.querySelector('textarea').value = ''\n  }\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get(`/api/london-parks-api/${id}/comments`)\n      setAllComments(data)\n    }\n    getData()\n  }, [id, newComment, setAllComments])\n\n  const deletingToast = () => {\n    toast.info('Comment is deleted!', {\n      position: 'top-center',\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    })\n  }\n\n  const addingToast = () => {\n    toast.success('Comment is added!', {\n      position: 'top-center',\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    })\n  }\n\n  return (\n    <>\n      <Comment.Group>\n        <Header as=\"h3\" color=\"green\" dividing>\n          Comments\n        </Header>\n        <Comment>\n          <Comment.Content>\n            {allComments.length ? (\n              allComments.map(comment => {\n                return (\n                  <>\n                    <Comment.Avatar\n                      as=\"a\"\n                      src={comment.owner.profilePicture}\n                      floated=\"right\"\n                    />\n                    <Comment.Author as=\"a\">\n                      {comment.owner.username}\n                    </Comment.Author>\n                    <Comment.Metadata>\n                      <div>{comment.createdAt.slice(0, 10)}</div>\n                    </Comment.Metadata>\n                    {comment.owner._id === getSub() && (\n                      <Modal\n                        closeIcon\n                        open={open}\n                        trigger={\n                          <Button color=\"red\" floated=\"right\">\n                            Delete comment\n                          </Button>\n                        }\n                        onClose={() => setOpen(false)}\n                        onOpen={() => setOpen(true)}>\n                        <Header icon=\"archive\" content=\"Deleting comment\" />\n                        <Modal.Content>\n                          <p>Are you sure you want to delete your comment?</p>\n                        </Modal.Content>\n                        <Modal.Actions>\n                          <Button color=\"red\" onClick={() => setOpen(false)}>\n                            <Icon name=\"remove\" /> No\n                          </Button>\n                          <Button\n                            color=\"green\"\n                            value={comment._id}\n                            onClick={deleteComment}>\n                            <Icon name=\"checkmark\" /> Yes\n                          </Button>\n                        </Modal.Actions>\n                      </Modal>\n                    )}\n\n                    <Comment.Text>{comment.text}</Comment.Text>\n                    <Rating\n                      defaultRating={comment.rating}\n                      icon=\"star\"\n                      maxRating={5}\n                      disabled\n                    />\n                    <Divider />\n                  </>\n                )\n              })\n            ) : (\n              <Header textAlign=\"center\" as=\"h2\">\n                Be first to comment and rate this park!\n              </Header>\n            )}\n            {userIsAuthenticated() ? (\n              <Form reply>\n                <Form.TextArea\n                  onChange={handleChange}\n                  name=\"text\"\n                  placeholder=\"Your comment...\"\n                />\n                <Rating\n                  onClick={handleStars}\n                  icon=\"star\"\n                  maxRating={5}\n                  name=\"rating\"\n                />\n                {toggle ? (\n                  <>\n                    <p style={{ color: 'red' }}>\n                      Please add a rating to submit your comment\n                    </p>\n                    <Button\n                      autoFocus\n                      onClick={handleSubmit}\n                      content=\"Add Comment\"\n                      labelPosition=\"left\"\n                    />\n                  </>\n                ) : (\n                  <Button\n                    onClick={handleSubmit}\n                    content=\"Add Comment\"\n                    labelPosition=\"left\"\n                  />\n                )}\n              </Form>\n            ) : (\n              <Segment raised>\n                <Header textAlign=\"center\" as=\"h3\">\n                  To add comment and rating you have to <a href=\"/login\">Log</a>{' '}\n                  in or <a href=\"/register\">Register</a>!\n                </Header>\n              </Segment>\n            )}\n          </Comment.Content>\n        </Comment>\n      </Comment.Group>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover\n        transition={Flip}\n      />\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport {\n  Header,\n  Divider,\n  Grid,\n  Segment,\n  Container,\n  GridColumn,\n} from 'semantic-ui-react'\nimport Favourite from './Favourite.js'\nimport Weather from './Weather.js'\nimport ReactMapGl from 'react-map-gl'\nimport Carousel from 'react-responsive-carousel/lib/js/components/Carousel/index'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport Planner from './Planner.js'\nimport ParkInfo from './ParkInfo'\nimport Activities from './Activities'\nimport { UserComment } from './UserComment'\n\nconst ParkPage = () => {\n  const { id } = useParams()\n  const [park, setPark] = useState(null)\n  const [lat, setLat] = useState()\n  const [long, setLong] = useState()\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data: park } = await axios.get(`/api/london-parks-api/${id}`)\n      setPark(park)\n      setLat(parseFloat(park.latitude))\n      setLong(parseFloat(park.longitude))\n    }\n    getData()\n  }, [id])\n\n  return (\n    <>\n      {park && (\n        <>\n          <Segment raised className=\"regionTitle\">\n            <Header\n              as={'h1'}\n              textAlign={'center'}\n              id=\"parkHeader\"\n              color=\"green\">\n              {park.title} 🍁\n            </Header>\n          </Segment>\n          <Container>\n            <Carousel\n              showThumbs={true}\n              infiniteLoop={true}\n              autoPlay={true}\n              interval={2500}\n              transitionTime={1000}\n              autoFocus={true}\n              swipeable={true}\n              dynamicHeight={true}\n              animationHandler=\"fade\">\n              {park.images.map(image => (\n                <img src={image} alt={park.title}></img>\n              ))}\n            </Carousel>\n          </Container>\n          <Divider hidden />\n          <Container>\n            <Header as=\"h3\" color=\"olive\">\n              <b>Description</b>\n            </Header>\n            <Container>{park.description}</Container>\n            <Weather park={park} />\n            <Grid columns={3}>\n              <Grid.Column>\n                <ParkInfo park={park} />\n                <Favourite park={park} id={id} />\n              </Grid.Column>\n              <GridColumn>\n                <Planner park={park} />\n              </GridColumn>\n              <Grid.Column>\n                <Activities park={park} />\n              </Grid.Column>\n            </Grid>\n            <Segment raised color=\"olive\">\n              <ReactMapGl\n                mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n                height=\"30em\"\n                width=\"100%\"\n                mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n                zoom={13}\n                latitude={lat}\n                longitude={long}\n              />\n            </Segment>\n            <Segment basic />\n            <Container>\n              <UserComment id={id} />\n            </Container>\n            <Divider />\n          </Container>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ParkPage\n","import axios from 'axios'\nimport { Image, Input } from 'semantic-ui-react'\n\nconst uploadURL = process.env.REACT_APP_CLOUDINARY_URL\nconst uploadPreset = process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET\n\nexport const ImageUploadField = ({ handleImageUrl, value }) => {\n  const handleUpload = async event => {\n    const data = new FormData()\n    data.append('file', event.target.files[0])\n    data.append('upload_preset', uploadPreset)\n    const response = await axios.post(uploadURL, data)\n    handleImageUrl(response.data.url)\n  }\n  return (\n    <>\n      <label>Profile Picture</label>\n      {value ? (\n        <Image src={value} alt=\"Choosen image\" fluid />\n      ) : (\n        <Input name=\"profilePicture\" type=\"file\" onChange={handleUpload} />\n      )}\n    </>\n  )\n}\n","import axios from 'axios'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Form,\n  Button,\n  Grid,\n  GridColumn,\n  Segment,\n  Header,\n} from 'semantic-ui-react'\nimport { ImageUploadField } from './ImageUploadField'\nimport { motion } from 'framer-motion'\n\nconst NewRegister = () => {\n  const history = useHistory()\n\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    profilePicture: '',\n    passwordConfirmation: '',\n  })\n\n  const [errors, setErrors] = useState({\n    username: '',\n    email: '',\n    profilePicture: '',\n    password: '',\n    passwordConfirmation: '',\n  })\n\n  const handleChange = e => {\n    const newFormData = { ...formData, [e.target.name]: e.target.value }\n    setFormData(newFormData)\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    try {\n      await axios.post('api/register', formData)\n      history.push('/login')\n    } catch (err) {\n      setErrors(err.response.data.errors)\n    }\n  }\n\n  const handleImageUrl = url => {\n    setFormData({ ...formData, profilePicture: url })\n  }\n\n  return (\n    <motion.div\n      initial={{ scaleY: 0 }}\n      animate={{ scaleY: 1 }}\n      exit={{ scaleY: 0 }}>\n      <Grid centered>\n        <GridColumn style={{ maxWidth: 550, marginTop: 100 }}>\n          <Segment>\n            <Form onSubmit={handleSubmit}>\n              <Form.Field>\n                <label>Username</label>\n                <input\n                  required={true}\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  onChange={handleChange}\n                />\n                {errors.username && (\n                  <Header sub color=\"red\">\n                    User name has to be unique\n                  </Header>\n                )}\n              </Form.Field>\n              <Form.Field>\n                <label>Email</label>\n                <input\n                  required={true}\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  onChange={handleChange}\n                />\n                {errors.email && (\n                  <Header sub color=\"red\">\n                    Email address has to be unique\n                  </Header>\n                )}\n              </Form.Field>\n              <Form.Field>\n                <label>Password</label>\n                <input\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                />\n                {errors.passwordConfirmation && (\n                  <Header sub color=\"red\">\n                    Passwords does not match!\n                  </Header>\n                )}\n              </Form.Field>\n              <Form.Field>\n                <label>Confirm Password</label>\n                <input\n                  placeholder=\"Confirm Password\"\n                  type=\"password\"\n                  name=\"passwordConfirmation\"\n                  onChange={handleChange}\n                />\n                {errors.password && (\n                  <Header sub color=\"red\">\n                    Passwords does not match!\n                  </Header>\n                )}\n              </Form.Field>\n              <Form.Field>\n                <ImageUploadField\n                  value={formData.profilePicture}\n                  name=\"profilePicture\"\n                  handleImageUrl={handleImageUrl}\n                />\n              </Form.Field>\n              <Button positive fluid type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Segment>\n        </GridColumn>\n      </Grid>\n    </motion.div>\n  )\n}\n\nexport default NewRegister\n","import React, { useState } from 'react'\nimport {\n  Form,\n  Grid,\n  Segment,\n  GridColumn,\n  Button,\n  Header,\n} from 'semantic-ui-react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport { motion } from 'framer-motion'\n\nconst NewLogin = () => {\n  const history = useHistory()\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  })\n\n  const [error, setError] = useState(false)\n\n  const handleChange = e => {\n    const newFormData = { ...formData, [e.target.name]: e.target.value }\n    setFormData(newFormData)\n  }\n\n  const setItemToLocalStorage = token =>\n    window.localStorage.setItem('token', token)\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/login', formData)\n      setItemToLocalStorage(data.token)\n      history.push('/profile')\n    } catch (err) {\n      setError(true)\n    }\n  }\n\n  return (\n    <motion.div\n      initial={{ scaleY: 0 }}\n      animate={{ scaleY: 1 }}\n      exit={{ scaleY: 0 }}>\n      <Grid centered>\n        <GridColumn style={{ maxWidth: 550, marginTop: 100 }}>\n          <Segment>\n            <Form onSubmit={handleSubmit}>\n              <Form.Field>\n                <label>Email</label>\n                <input\n                  required={true}\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  onChange={handleChange}\n                />\n                {error && (\n                  <Header sub color=\"red\">\n                    Login or password are inncorect!\n                  </Header>\n                )}\n              </Form.Field>\n              <Form.Field>\n                <label>Password</label>\n                <input\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                />\n                {error && (\n                  <Header sub color=\"red\">\n                    Password or login are inncorect!\n                  </Header>\n                )}\n              </Form.Field>\n              <Button positive fluid type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Segment>\n        </GridColumn>\n      </Grid>\n    </motion.div>\n  )\n}\n\nexport default NewLogin\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Home from './components/Home.js'\nimport NavBarHome from './components/NavBarHome'\nimport ParkIndex from './components/ParkIndex.js'\nimport UserProfile from './components/UserProfile.js'\nimport Region from './components/Region.js'\nimport ParkPage from './components/ParkPage.js'\nimport NewRegister from './components/NewRegister.js'\nimport NewLogin from './components/NewLogin.js'\nimport { useState } from 'react'\nconst App = () => {\n  const [userData, setUserData] = useState([])\n\n  return (\n    <BrowserRouter>\n      <NavBarHome userData={userData} />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/parks\" component={ParkIndex} />\n        <Route exact path=\"/login\" component={NewLogin} />\n        <Route exact path=\"/register\" component={NewRegister} />\n        <Route excat path=\"/profile\">\n          {' '}\n          <UserProfile setUserData={setUserData} />\n        </Route>\n        <Route exact path=\"/parks/region\" component={Region} />\n        <Route exact path=\"/parks/:id\" component={ParkPage} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.css'\nimport App from './App'\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}